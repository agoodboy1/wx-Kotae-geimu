<style lang="less">


  .wrong_info{font-size: 12px;background: #efefef;color:#333333;padding: ~"10rpx";border-radius:~"10rpx";border:1px solid #dfdfdf;margin-left:~"20rpx";  }
  .btn_list{border-top:1px solid #d9d9d9;}
  .mgCtr{
    margin: auto;text-align: center;border-right: 1px solid #dfdfdf;
    i{line-height: 45px;color:#333333}
  }

  .color_light_gray{color:#d9d9d9 !important;}
</style>
<template>
  <view class="page">
    <view>
      <wordsDtl :list.sync="list" :wordId.sync="list.wordId"></wordsDtl>
    </view>
    <view class="page__ft btn_list">
      <view class="weui-flex">
        <view class="weui-flex__item mgCtr" @tap="prev()"><i class="icon iconfont icon-shang {{list.wordId==first?'color_light_gray':''}}"  ></i></view>
        <view class="weui-flex__item mgCtr" @tap="next()"><i class="icon iconfont icon-xia {{list.wordId==last?'color_light_gray':''}}"></i></view>
      </view>


    </view>
    <toast/>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Panel from '@/components/panel' // alias example
  import List from '../components/list' // aliasFields example
  import Toast from 'wepy-com-toast'
  import WordsDtl from '../components/wordsDtl'

  export default class Me extends wepy.page {
    config = {
      navigationBarTitleText: ''
    }
    components = {
      panel: Panel,
      list: List,
      toast: Toast,
      wordsDtl: WordsDtl,
    }


    data = {
      wordId:0,
      list:{},
      first:null,
      last:null,
      idLists:null,

    }
    globalData = {
      userInfo: null,
    };
    methods = {
      prev(){
        let self = this;
        if(self.list.wordId!=self.first)
        {
           self.wordId= self.idLists[self.idLists.indexOf(parseInt(self.wordId))-1];
          self.methods.getDtls(self.wordId,self);

        }
      },
      next(){
        let self = this;
        if(self.list.wordId!=self.last) {
          self.wordId= self.idLists[self.idLists.indexOf(parseInt(self.wordId))+1];
          self.methods.getDtls(self.wordId,self);
        }

      },
      getDtls(wordId,self){
        try {
          var res = wx.getStorageSync('wordList')
          if (res) {
            for (var i in res)
            {
              if(res[i].wordId==wordId)
              {self.list=res[i];}
            }
          }
        } catch (e) {
          //
        }

      }
    }

    events = {
    }
    onLoad(options) {
      let self = this;
      self.wordId=options.id;
      //获取
      wx.getStorage({
        //获取数据的key
        key: 'wordList',
        success: function(res) {
          var tmp=res.data;
          for (var i in tmp)
          {
            if(tmp[i].wordId==parseInt(self.wordId))
            {self.list=tmp[i];
            }
          }

        },
        /**
         * 失败会调用
         */
        fail: function(res) {
          console.log(res,"单词详情失败信息，改用调取id");
          wx.request({
            url:  self.$parent.globalData.devUrl+'/lesson?wordId='+self.wordId+'&openId='+self.$parent.globalData.openId,
            method:'POST',
            header:{
              "Content-Type":"application/x-www-form-urlencoded",
            },
            success: function (d) {
              console.log(d,'in fail');
              if(d.statusCode==200){
                self.list=JSON.parse(d.data.result);

              }
              self.$apply()
            }
          })
          //调用完毕
          console.log(self.list,' self.list');
        }
      })
      wx.getStorage({
        key: 'wordFirstId',
        success: function(res) {
          self.first=res.data;
        }
      })
      wx.getStorage({
        key: 'wordLastId',
        success: function(res) {
          self.last=res.data;
        }
      })
      wx.getStorage({
        key: 'wordIdLists',
        success: function(res) {
          self.idLists=res.data;
        }
      })

    }


  }
</script>
